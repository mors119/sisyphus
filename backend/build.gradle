plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.sisyphus'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 기본 웹 & API
    implementation "org.springframework.boot:spring-boot-starter-web"

    // spring dev TODO: 배포 시 삭제
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // mail 인증
    implementation "org.springframework.boot:spring-boot-starter-mail"
    // redis
    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    // JPA + DB
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
//    runtimeOnly "org.postgresql:postgresql"

    // H2
    runtimeOnly "com.h2database:h2"

    // Security & JWT
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // 검증 (DTO @Valid 등)
    implementation "org.springframework.boot:spring-boot-starter-validation"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter'
    // JSON 직렬화 (Jackson)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // oAuth 관련
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"

    // dotenv
    implementation "me.paulschwarz:spring-dotenv:3.0.0"
//    implementation 'io.github.cdimascio:java-dotenv:5.2.2' // 꼭 명시적으로 추가
}


tasks.named('test') {
    useJUnitPlatform()
}
